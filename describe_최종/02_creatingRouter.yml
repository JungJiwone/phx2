## https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_guest_module.html

---
- hosts: localhost
  vars_files: ./vars.yml
#누구한테 누가 무엇을 시키는가 
  tasks:  # 무엇을 
    - name: Create Router VM  # 가상 머신 생성 
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}" #누구한테 시키는가 = Base_vCenter 
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: 'false' # 인증서 무시 
        datacenter: '{{datacenter_name}}' #누가 시키는가 = 나의 datacenter 
        folder: '{{ folder_prefix + student_ID }}' # 작업 위치 지정 
        name: '{{ item.vmname }}' #item = 반복문 사용 시 이용하는 변수 하단의 with_items 목록에서 읽어옴 
        state: poweredon #vm을 켜주세요 
        guest_id: '{{ item.guest_id }}' # 어떤 OS인지 = debian10_64Guest = vyos 
        esxi_hostname: "{{ esxi_hostname }}"  # 나의 물리서버 = 200.200.200.246 
        hardware:
          num_cpus: '{{ item.cpus }}' # vm에 할당할 cpu 개수 
          memory_mb: '{{ item.memory }}' # vm에 할당할 메모리 
          scsi: paravirtual # 디스크 컨트롤러를 paravirtual을 사용하겠다 
        disk: # 디스크 컨트롤러에 어떤 디스크를 붙일 것인가 
        - size_gb: '{{ item.disk_gb }}' # 디스크의 용량 
          type: thin # thin provisioning, vSphere에선 thin 모드가 기본값이 아닐 수도 있음, rdmp? 
          datastore: '{{ datastore_name }}'  # 디스크를 어디에 저장할 것인가? = Local-01 
        networks: #누구랑 통신할 것인가? 
        - name: '{{ public_net }}' # =VM-200.200.200.x 위로 올라가는(업링크)를 퍼블릭 네트워크로 연결 
          device_type: vmxnet3
        - name: '{{ private_net }}' # 아래로 내려가는(다운링크)는 프라이빗 네트워크로, 내가 만든 스위치의 트렁크 포트로 연결 
          device_type: vmxnet3
        cdrom: # 최초로 부팅할 수 있는 장치로 cdrom을 쓰겠다 
        - controller_number: 0 
          unit_number: 0
          state: present
          type: iso # cdrom을 이용하는 것을 iso 파일을 이용하겠다 
          iso_path: '{{ "[" + datastore_name + "]\ISO\vyos-rolling-latest.iso" }}' #iso 파일 위치, Local_01\ISO 
      with_items: # 반복문 사용 시 들어갈 목록 
      - { vmname: "{{ student_ID + '-Router'}}", guest_id: debian10_64Guest, cpus: 1, memory: 1024,  disk_gb: 10 }
      delegate_to: localhost #localhost에 위임하다 = 일을 시키겠다 
      register: deploy_vm # 엔서블 결과를 deploy_vm에 저장 





#podman.socket = 컨테이너 돌릴 수 있는 엔진
